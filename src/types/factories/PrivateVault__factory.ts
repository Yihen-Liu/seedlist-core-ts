/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PrivateVault, PrivateVaultInterface } from "../PrivateVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getLabelByIndex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getLabelByName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
    ],
    name: "saveWithMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
    ],
    name: "saveWithoutMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b7e380380610b7e83398101604081905261002f9161008e565b600080546001600160a01b039384166001600160a01b0319909116179055600180546005805461ffff191690556001600160a81b031916919092161790556100c1565b80516001600160a01b038116811461008957600080fd5b919050565b600080604083850312156100a157600080fd5b6100aa83610072565b91506100b860208401610072565b90509250929050565b610aae806100d06000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063229667991161005057806322966799146100aa5780632ebc2fcb146100bd5780634f02c420146100d057600080fd5b80630681f4f41461006c5780631bcbb1fe14610095575b600080fd5b61007f61007a3660046107ac565b6100f4565b60405161008c9190610807565b60405180910390f35b6100a86100a33660046108dd565b61029c565b005b6100a86100b83660046108dd565b61045e565b61007f6100cb366004610941565b6105f1565b6001546100e490600160a01b900460ff1681565b604051901515815260200161008c565b6001546060906001600160a01b031633148061011a57506000546001600160a01b031633145b61015f5760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b60448201526064015b60405180910390fd5b60055461ffff8084169116116101b75760405162461bcd60e51b815260206004820152601460248201527f4c6162656c73206b657973206f766572666c6f770000000000000000000000006044820152606401610156565b61ffff8216600090815260036020908152604080832090516101d992016109b9565b60408051601f1981840301815291815281516020928301206001600160a01b0381166000908152600490935291208054919250906102169061097e565b80601f01602080910402602001604051908101604052809291908181526020018280546102429061097e565b801561028f5780601f106102645761010080835404028352916020019161028f565b820191906000526020600020905b81548152906001019060200180831161027257829003601f168201915b5050505050915050919050565b6001546001600160a01b03163314806102bf57506000546001600160a01b031633145b6102ff5760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b6044820152606401610156565b6000816040516020016103129190610a55565b60408051601f1981840301815291815281516020928301206001600160a01b0381166000908152600290935291205490915060ff16156103865760405162461bcd60e51b815260206004820152600f60248201526e131858995b081a185cc8195e1a5cdd608a1b6044820152606401610156565b6001600160a01b038116600090815260046020908152604090912084516103af92860190610713565b5060055461ffff16600090815260036020908152604090912083516103d692850190610713565b506005805461ffff169060006103eb83610a71565b825461ffff9182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff1916600190811790915580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790555050565b6001546001600160a01b031633148061048157506000546001600160a01b031633145b6104c15760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b6044820152606401610156565b6000816040516020016104d49190610a55565b60408051601f1981840301815291815281516020928301206001600160a01b0381166000908152600290935291205490915060ff16156105485760405162461bcd60e51b815260206004820152600f60248201526e131858995b081a185cc8195e1a5cdd608a1b6044820152606401610156565b6001600160a01b0381166000908152600460209081526040909120845161057192860190610713565b5060055461ffff166000908152600360209081526040909120835161059892850190610713565b506005805461ffff169060006105ad83610a71565b825461ffff9182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff191660011790555050565b6001546060906001600160a01b031633148061061757506000546001600160a01b031633145b6106575760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b6044820152606401610156565b60008260405160200161066a9190610a55565b60408051601f1981840301815291815281516020928301206001600160a01b0381166000908152600290935291205490915060ff1615156001146106f05760405162461bcd60e51b815260206004820152600e60248201527f4c6162656c206e6f2065786973740000000000000000000000000000000000006044820152606401610156565b6001600160a01b038116600090815260046020526040902080546102169061097e565b82805461071f9061097e565b90600052602060002090601f0160209004810192826107415760008555610787565b82601f1061075a57805160ff1916838001178555610787565b82800160010185558215610787579182015b8281111561078757825182559160200191906001019061076c565b50610793929150610797565b5090565b5b808211156107935760008155600101610798565b6000602082840312156107be57600080fd5b813561ffff811681146107d057600080fd5b9392505050565b60005b838110156107f25781810151838201526020016107da565b83811115610801576000848401525b50505050565b60208152600082518060208401526108268160408501602087016107d7565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261086157600080fd5b813567ffffffffffffffff8082111561087c5761087c61083a565b604051601f8301601f19908116603f011681019082821181831017156108a4576108a461083a565b816040528381528660208588010111156108bd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156108f057600080fd5b823567ffffffffffffffff8082111561090857600080fd5b61091486838701610850565b9350602085013591508082111561092a57600080fd5b5061093785828601610850565b9150509250929050565b60006020828403121561095357600080fd5b813567ffffffffffffffff81111561096a57600080fd5b61097684828501610850565b949350505050565b600181811c9082168061099257607f821691505b602082108114156109b357634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806109d557607f831692505b60208084108214156109f557634e487b7160e01b86526022600452602486fd5b818015610a095760018114610a1a57610a47565b60ff19861689528489019650610a47565b60008a81526020902060005b86811015610a3f5781548b820152908501908301610a26565b505084890196505b509498975050505050505050565b60008251610a678184602087016107d7565b9190910192915050565b600061ffff80831681811415610a9757634e487b7160e01b600052601160045260246000fd5b600101939250505056fea164736f6c634300080c000a";

type PrivateVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateVault__factory extends ContractFactory {
  constructor(...args: PrivateVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateVault> {
    return super.deploy(
      _signer,
      _caller,
      overrides || {}
    ) as Promise<PrivateVault>;
  }
  override getDeployTransaction(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_signer, _caller, overrides || {});
  }
  override attach(address: string): PrivateVault {
    return super.attach(address) as PrivateVault;
  }
  override connect(signer: Signer): PrivateVault__factory {
    return super.connect(signer) as PrivateVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateVaultInterface {
    return new utils.Interface(_abi) as PrivateVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateVault {
    return new Contract(address, _abi, signerOrProvider) as PrivateVault;
  }
}

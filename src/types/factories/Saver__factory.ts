/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Saver, SaverInterface } from "../Saver";

const _abi = [
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103b5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde031461004657806317d7de7c14610064578063c47f00271461006c575b600080fd5b61004e610081565b60405161005b9190610251565b60405180910390f35b61004e61010f565b61007f61007a3660046102bc565b6101a1565b005b6000805461008e9061036d565b80601f01602080910402602001604051908101604052809291908181526020018280546100ba9061036d565b80156101075780601f106100dc57610100808354040283529160200191610107565b820191906000526020600020905b8154815290600101906020018083116100ea57829003601f168201915b505050505081565b60606000805461011e9061036d565b80601f016020809104026020016040519081016040528092919081815260200182805461014a9061036d565b80156101975780601f1061016c57610100808354040283529160200191610197565b820191906000526020600020905b81548152906001019060200180831161017a57829003601f168201915b5050505050905090565b80516101b49060009060208401906101b8565b5050565b8280546101c49061036d565b90600052602060002090601f0160209004810192826101e6576000855561022c565b82601f106101ff57805160ff191683800117855561022c565b8280016001018555821561022c579182015b8281111561022c578251825591602001919060010190610211565b5061023892915061023c565b5090565b5b80821115610238576000815560010161023d565b600060208083528351808285015260005b8181101561027e57858101830151858201604001528201610262565b81811115610290576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102ce57600080fd5b813567ffffffffffffffff808211156102e657600080fd5b818401915084601f8301126102fa57600080fd5b81358181111561030c5761030c6102a6565b604051601f8201601f19908116603f01168101908382118183101715610334576103346102a6565b8160405282815287602084870101111561034d57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061038157607f821691505b602082108114156103a257634e487b7160e01b600052602260045260246000fd5b5091905056fea164736f6c634300080c000a";

type SaverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SaverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Saver__factory extends ContractFactory {
  constructor(...args: SaverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Saver> {
    return super.deploy(overrides || {}) as Promise<Saver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Saver {
    return super.attach(address) as Saver;
  }
  override connect(signer: Signer): Saver__factory {
    return super.connect(signer) as Saver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SaverInterface {
    return new utils.Interface(_abi) as SaverInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Saver {
    return new Contract(address, _abi, signerOrProvider) as Saver;
  }
}

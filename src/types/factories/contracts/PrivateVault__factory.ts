/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrivateVault,
  PrivateVaultInterface,
} from "../../contracts/PrivateVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getLabelByIndex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getLabelByName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_minted",
        type: "bool",
      },
    ],
    name: "saveWithMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
    ],
    name: "saveWithoutMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c1c380380610c1c83398101604081905261002f9161008e565b600080546001600160a01b039384166001600160a01b0319909116179055600180546005805461ffff191690556001600160a81b031916919092161790556100c1565b80516001600160a01b038116811461008957600080fd5b919050565b600080604083850312156100a157600080fd5b6100aa83610072565b91506100b860208401610072565b90509250929050565b610b4c806100d06000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80632ebc2fcb116100505780632ebc2fcb146100aa578063345787e4146100bd5780634f02c420146100d057600080fd5b80630681f4f41461006c5780632296679914610095575b600080fd5b61007f61007a3660046107d1565b6100f4565b60405161008c9190610828565b60405180910390f35b6100a86100a33660046108fe565b61029c565b005b61007f6100b8366004610962565b61042f565b6100a86100cb36600461099f565b610551565b6001546100e490600160a01b900460ff1681565b604051901515815260200161008c565b6001546060906001600160a01b031633148061011a57506000546001600160a01b031633145b61015f5760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b60448201526064015b60405180910390fd5b60055461ffff8084169116116101b75760405162461bcd60e51b815260206004820152601460248201527f4c6162656c73206b657973206f766572666c6f770000000000000000000000006044820152606401610156565b61ffff8216600090815260036020908152604080832090516101d99201610a57565b60408051601f1981840301815291815281516020928301206001600160a01b03811660009081526004909352912080549192509061021690610a1c565b80601f016020809104026020016040519081016040528092919081815260200182805461024290610a1c565b801561028f5780601f106102645761010080835404028352916020019161028f565b820191906000526020600020905b81548152906001019060200180831161027257829003601f168201915b5050505050915050919050565b6001546001600160a01b03163314806102bf57506000546001600160a01b031633145b6102ff5760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b6044820152606401610156565b6000816040516020016103129190610af3565b60408051601f1981840301815291815281516020928301206001600160a01b0381166000908152600290935291205490915060ff16156103865760405162461bcd60e51b815260206004820152600f60248201526e131858995b081a185cc8195e1a5cdd608a1b6044820152606401610156565b6001600160a01b038116600090815260046020908152604090912084516103af92860190610738565b5060055461ffff16600090815260036020908152604090912083516103d692850190610738565b506005805461ffff169060006103eb83610b0f565b825461ffff9182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff191660011790555050565b6001546060906001600160a01b031633148061045557506000546001600160a01b031633145b6104955760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b6044820152606401610156565b6000826040516020016104a89190610af3565b60408051601f1981840301815291815281516020928301206001600160a01b0381166000908152600290935291205490915060ff16151560011461052e5760405162461bcd60e51b815260206004820152600e60248201527f4c6162656c206e6f2065786973740000000000000000000000000000000000006044820152606401610156565b6001600160a01b0381166000908152600460205260409020805461021690610a1c565b6001546001600160a01b031633148061057457506000546001600160a01b031633145b6105b45760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b6044820152606401610156565b6000826040516020016105c79190610af3565b60408051601f1981840301815291815281516020928301206001600160a01b0381166000908152600290935291205490915060ff161561063b5760405162461bcd60e51b815260206004820152600f60248201526e131858995b081a185cc8195e1a5cdd608a1b6044820152606401610156565b6001600160a01b0381166000908152600460209081526040909120855161066492870190610738565b5060055461ffff166000908152600360209081526040909120845161068b92860190610738565b506005805461ffff169060006106a083610b0f565b825461ffff9182166101009390930a9283029190920219909116179055506001600160a01b0381166000908152600260205260409020805460ff191660019081179091558215151480156106fe5750600154600160a01b900460ff16155b1561073257600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790555b50505050565b82805461074490610a1c565b90600052602060002090601f01602090048101928261076657600085556107ac565b82601f1061077f57805160ff19168380011785556107ac565b828001600101855582156107ac579182015b828111156107ac578251825591602001919060010190610791565b506107b89291506107bc565b5090565b5b808211156107b857600081556001016107bd565b6000602082840312156107e357600080fd5b813561ffff811681146107f557600080fd5b9392505050565b60005b838110156108175781810151838201526020016107ff565b838111156107325750506000910152565b60208152600082518060208401526108478160408501602087016107fc565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261088257600080fd5b813567ffffffffffffffff8082111561089d5761089d61085b565b604051601f8301601f19908116603f011681019082821181831017156108c5576108c561085b565b816040528381528660208588010111156108de57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561091157600080fd5b823567ffffffffffffffff8082111561092957600080fd5b61093586838701610871565b9350602085013591508082111561094b57600080fd5b5061095885828601610871565b9150509250929050565b60006020828403121561097457600080fd5b813567ffffffffffffffff81111561098b57600080fd5b61099784828501610871565b949350505050565b6000806000606084860312156109b457600080fd5b833567ffffffffffffffff808211156109cc57600080fd5b6109d887838801610871565b945060208601359150808211156109ee57600080fd5b506109fb86828701610871565b92505060408401358015158114610a1157600080fd5b809150509250925092565b600181811c90821680610a3057607f821691505b60208210811415610a5157634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680610a7357607f831692505b6020808410821415610a9357634e487b7160e01b86526022600452602486fd5b818015610aa75760018114610ab857610ae5565b60ff19861689528489019650610ae5565b60008a81526020902060005b86811015610add5781548b820152908501908301610ac4565b505084890196505b509498975050505050505050565b60008251610b058184602087016107fc565b9190910192915050565b600061ffff80831681811415610b3557634e487b7160e01b600052601160045260246000fd5b600101939250505056fea164736f6c634300080c000a";

type PrivateVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateVault__factory extends ContractFactory {
  constructor(...args: PrivateVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateVault> {
    return super.deploy(
      _signer,
      _caller,
      overrides || {}
    ) as Promise<PrivateVault>;
  }
  override getDeployTransaction(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_signer, _caller, overrides || {});
  }
  override attach(address: string): PrivateVault {
    return super.attach(address) as PrivateVault;
  }
  override connect(signer: Signer): PrivateVault__factory {
    return super.connect(signer) as PrivateVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateVaultInterface {
    return new utils.Interface(_abi) as PrivateVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateVault {
    return new Contract(address, _abi, signerOrProvider) as PrivateVault;
  }
}
